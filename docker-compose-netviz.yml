version: '3.5'

services:

  load:
    container_name: load
    restart: always
    image: appdynamics/ad-air-load:java
    env_file: controller.env
    environment:
      - ENABLE_BASE_LOAD=1
    logging: &logging
      driver: json-file
      options:
        max-size: '1m'
        max-file: '5'

  ticketing-load:
    container_name: ticketing-load
    restart: always
    image: appdynamics/ad-air-load:java
    env_file: controller.env
    environment:
      - ENABLE_TICKETING_LOAD=1

  machine-agent:
    container_name: machine-agent
    hostname: machine-agent
    image: appdynamics/machine-agent-analytics:latest
    env_file: controller.env
    environment:
      - APPDYNAMICS_SIM_ENABLED=true
      - APPDYNAMICS_DOCKER_ENABLED=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostroot:ro
    expose:
      - 9090

  netviz-agent:
    container_name: netviz-agent
    hostname: netviz-agent
    image: appdynamics/machine-agent-netviz:latest
    network_mode: "host"
    env_file: controller.env
    environment:
      - APPDYNAMICS_SIM_ENABLED=true
      - APPDYNAMICS_DOCKER_ENABLED=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostroot:ro
    cap_add:
      - NET_ADMIN
      - NET_RAW
    expose:
      - 3892

########################################################
### Java
########################################################

  web-api:
    container_name: web-api
    hostname: web-api
    restart: always
    image: appdynamics/ad-air-web-api:java
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=web-api
      - APPDYNAMICS_AGENT_NODE_NAME=web-api-1
    expose:
      - 8080
    ports:
      - "8080:8080"
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  api-services:
    container_name: api-services
    hostname: api-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    deploy:
      replicas: 3
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=api-services
      - APPDYNAMICS_AGENT_NODE_NAME=api-services-1
      - TCP_LOSS=1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  customer-services:
    container_name: customer-services
    hostname: customer-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=customer-services
      - APPDYNAMICS_AGENT_NODE_NAME=customer-services-1
    expose:
      - 8080
    depends_on:
      - kafka
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  approval-services:
    container_name: approval-services
    hostname: approval-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=approval-services
      - APPDYNAMICS_AGENT_NODE_NAME=approval-services-1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  ticket-services:
    container_name: ticket-services
    hostname: ticket-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - TOPIC_LIST=customer-services
      - KAFKA_LISTENER_CLASS=com.java.acme.kafka.TicketServicesKafkaListener
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=ticket-services
      - APPDYNAMICS_AGENT_NODE_NAME=ticket-services-1
      - TCP_LOSS=1
    depends_on:
      - kafka
    volumes:
      - java-agent:/opt/appdynamics/java-agent/
      - ./custom-interceptors.xml:/opt/appdynamics/java-agent/conf/custom-interceptors.xml

  booking-services:
    container_name: booking-services
    hostname: booking-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - TOPIC_LIST=customer-services
      - KAFKA_LISTENER_CLASS=com.java.acme.kafka.BookingServicesKafkaListener
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=booking-services
      - APPDYNAMICS_AGENT_NODE_NAME=booking-services-1
      - NETWORK_ADDLOSS=1
    depends_on:
      - kafka
    volumes:
      - java-agent:/opt/appdynamics/java-agent/
      - ./custom-interceptors.xml:/opt/appdynamics/java-agent/conf/custom-interceptors.xml

  auth-services:
    container_name: auth-services
    hostname: auth-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=auth-services
      - APPDYNAMICS_AGENT_NODE_NAME=auth-services-1
    depends_on:
      - mysql-promotions
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  flight-services:
    container_name: flight-services
    hostname: flight-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=flight-services
      - APPDYNAMICS_AGENT_NODE_NAME=flight-services-1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  offer-services:
    container_name: offer-services
    hostname: offer-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=offer-services
      - APPDYNAMICS_AGENT_NODE_NAME=offer-services-1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  search-services:
    container_name: search-services
    hostname: search-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=search-services
      - APPDYNAMICS_AGENT_NODE_NAME=search-services-1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  search-api:
    container_name: search-api
    hostname: search-api
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=search-api
      - APPDYNAMICS_AGENT_NODE_NAME=search-api-1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

  caching-services:
    container_name: caching-services
    hostname: caching-services
    restart: always
    image: appdynamics/ad-air-java-services:netviz
    env_file: controller.env
    environment:
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=caching-services
      - APPDYNAMICS_AGENT_NODE_NAME=caching-services-1
      - NETWORK_ADDLOSS=1
    expose:
      - 8080
    volumes:
      - java-agent:/opt/appdynamics/java-agent/

########################################################
### Kafka, databases, and other backends
########################################################

  mysql-promotions:
    image: appdynamics/ad-air-mysql-db:java
    container_name: mysql-promotions
    hostname: mysql-promotions
    restart: always
    expose:
      - 3306
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=l3tm31n

  fraud-check:
    container_name: fraud-check
    hostname: fraud-check
    restart: always
    image: appdynamics/ad-air-mock-services:java
    expose:
      - 8080

  sap-services:
    container_name: sap-services
    hostname: sap-services
    restart: always
    image: appdynamics/ad-air-mock-services:java
    expose:
      - 8080

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    restart: always
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    depends_on:
      - zookeeper

  mongo-sessions:
    image: mongo:latest
    container_name: mongo-sessions
    hostname: mongo-sessions
    restart: always
    expose:
      - "27017"

  mongo-tickets:
    image: mongo:latest
    container_name: mongo-tickets
    hostname: mongo-tickets
    restart: always
    expose:
      - "27017"
    ports:
      - "27017:27017"

  java-agent:
    container_name: java-agent
    hostname: java-agent
    image: appdynamics/java-agent:latest
    volumes:
      - java-agent:/opt/appdynamics

volumes:
  java-agent: